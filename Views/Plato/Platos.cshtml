@section scripts {
    <link href="~/Content/styles.css" rel="stylesheet" />
    <script src="~/Scripts/knockout-3.0.0.js"></script>
    <script src="@Url.Content("~/Scripts/knockout-3.0.0.debug.js")" type="text/javascript"></script>
    <script type="text/javascript">

        function formatCurrency(value) {
            return "$" + value.toFixed(2);
        }

        function PlatoViewModel() {

            //Make the self as 'this' reference
            var self = this;
            //Declare observable which will be bind with UI 
            self.ID = ko.observable("");
            self.Nombre = ko.observable("");
            self.Precio = ko.observable("");


            var Plato = {
                ID: self.ID,
                Nombre: self.Nombre,
                Precio: self.Precio,
            };

            self.Plato = ko.observable();
            self.Platos = ko.observableArray(); // Contains the list of products

            // Initialize the view-model
            $.ajax({
                url: '@Url.Action("GetAllProducts", "Plato")',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (data) {
                    self.Platos(data); //Put the response in ObservableArray
                }
            });

            var CartItem = function (product, quantity) {
                var self = this; // Scope Trick

                self.product = ko.observable(product);
                self.quantity = ko.observable(quantity || 1);

                self.cost = ko.computed(function () {
                    return self.product().precio() * self.quantity();
                });
            };

            // CLASS ViewModel 
            var ViewModel = function () {
                var self = this; // Scope Trick

                /**
                 * Observables
                 */
                self.sales_tax = ko.observable(0.07);
                self.shipping_cost = ko.observable(10.00);

                /**
                 * Observable Arrays
                 */
                self.cart = ko.observableArray();
                self.products = ko.observableArray();

                /**
                 * Computed Observables
                 */
                self.subtotal = ko.computed(function () {
                    var subtotal = 0;
                    $(self.cart()).each(function (index, cart_item) {
                        subtotal += cart_item.cost();
                    });
                    return subtotal;
                });

                self.tax = ko.computed(function () {
                    return self.subtotal() * self.sales_tax();
                });

                self.total = ko.computed(function () {
                    return self.shipping_cost() + self.subtotal() + self.tax();
                });

                /**
                 * Actions
                 */
                self.addToCart = function (product, event) {
                    // Instantiate a new CartItem object using the passed
                    // in `Product` object, and then set a quantity of 1.
                    var cart_item = new CartItem(product, 1);

                    // Add the CartItem instance to the self.cart (Observable Array)
                    self.cart.push(cart_item);
                };

                self.removeFromCart = function (cart_item, event) {
                    // Remove the `cart_item` (which is a `CartItem` instance) from self.cart
                    self.cart.remove(cart_item);
                };
            };


        }

        var viewModel = new PlatoViewModel();
        ko.applyBindings(viewModel);


    </script>
    }


<body>
       @{
            ViewBag.Title = ViewBag.nombre;
         }

        <h2>@ViewBag.nombre</h2>
    <div class="page">
        <div id="main">
            <div>
               
                <ul class="saleItems leftFloat" data-bind="foreach: Platos"> 
                    <li class="mediumProductSquares" >
                       <div>
                        <div class="dialogTitleBorder">
                            
                            <span></span><span data-bind="text: Nombre" class="borderTitleText"></span>
                        </div>
                        <div class="leftFloat">                                                     
                            
                            <div>
                                <span>Precio: </span><span data-bind="text: formatCurrency(Precio)" class="textValues">
                                </span>
                            </div>
                        </div>
                        <button data-bind="click: $root.addToCart">Agregar</button>
                    </div>
                    </li>
                </ul>
                <div class="cartContainer leftFloat">
                    <div class="cartItemsContainer">
                        <div class="dialogTitleBorder">
                            <span class="borderTitleText">Carrito</span>
                        </div>
                        <table class="cartItems leftFloat">
                            <thead>
                                <tr><td class="descText">Plato</td><td>Precio</td><td>Cantidad</td><td>Total</td><td></td></tr>
                            </thead>
                            <tbody data-bind="{ foreach:cart}">
                                <tr >
                                    <td class="descText">
                                        <span data-bind="text: Platos().shortDesc"></span>
                                    </td>
                                    <td>
                                        <span data-bind="text: OrdersApp.formatCurrency(Plato().Precio())"></span>
                                    </td>
                                    <td>
                                        <input data-bind="value: quantity, valueUpdate:'afterkeydown'" class="integerInput"></input>
                                    </td>
                                    <td>
                                        <span data-bind="text: OrdersApp.formatCurrency(extPrice())"></span>
                                    </td>
                                    <td>
                                        <button data-bind="jqButton: { }, click: $root.removeFromCart">Remover plato</button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="cartSummaryContainer">
                        <span>Productos  </span><span data-bind="text:CartItem().length"></span>
                        <span>Precio Total </span><span data-bind="text:OrdersApp.formatCurrency(grandTotal())"></span>
                        <button data-bind="enable: CartItem().length > 0, click: $root.placeOrder">Pagar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>



